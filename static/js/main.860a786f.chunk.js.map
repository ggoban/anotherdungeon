{"version":3,"sources":["_actions/types.js","views/NavBar/NavBar.js","_actions/actions.js","views/DungeonPage/DungeonPage.js","App.js","reportWebVitals.js","_reducers/reducer.js","index.js"],"names":["SET_DUNGEON","SET_LANGUAGE","connect","state","dungeon","language","dispatch","HandleSelect","value","type","types","HandleChange","event","target","justify","defaultValue","options","label","children","onChange","allowClear","style","margin","onClick","domtoimage","toJpeg","document","querySelector","quality","then","dataUrl","link","createElement","download","name","console","log","href","click","Group","Button","Title","Typography","className","xs","md","fontSize","hard","level","veryhard","reward","count","map","id","kor","jap","kor_rare","jap_rare","alt","width","src","orientation","job","span","title","statusup","multiple","borderBottom","paddingBottom","monster","align","borderRight","weak","strong","description","marginBottom","boss","desc","etc","App","exact","path","component","DungeonPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","dungeons","present_beast_castle","ancient_zer_jung","initialState","counter","action","store","createStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.860a786f.chunk.js","sourcesContent":["export const SET_DUNGEON = 'SET_DUNGEON';\r\nexport const SET_LANGUAGE = 'SET_LANGUAGE';","import React from 'react'\r\nimport { Row, Cascader, Radio, Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { setDungeon, setLanguage } from \"../../_actions/actions\";\r\nimport domtoimage from 'dom-to-image';\r\n\r\nfunction NavBar({dungeon, language, HandleSelect, HandleChange}) {\r\n            \r\n    const options = [\r\n        {\r\n          value: 'ancient',\r\n          label: '고대',\r\n          children: [\r\n            {\r\n              value: 'zer_jung',\r\n              label: '제르베리야(정)',\r\n            },\r\n          ],\r\n        }, {\r\n          value: 'present',\r\n          label: '현대',\r\n          children: [\r\n            {\r\n              value: 'beast_castle',\r\n              label: '마수성',\r\n            },\r\n          ],\r\n        }\r\n      ];\r\n    \r\n    const handleSaveClick = () => {\r\n      domtoimage.toJpeg(document.querySelector('.container'), { quality: 1 })\r\n      .then(function (dataUrl) {\r\n          var link = document.createElement('a');\r\n          link.download = `${dungeon.name}_${language}.jpeg`;\r\n          console.log(link);\r\n          link.href = dataUrl;\r\n          link.click();\r\n      });\r\n    }\r\n\r\n    return (\r\n        <Row justify=\"center\">\r\n            <Cascader\r\n                defaultValue={['ancient', 'zer_jung']}\r\n                options={options}\r\n                onChange={HandleSelect} \r\n                allowClear={false}\r\n                style={{margin:\"1rem\"}}\r\n            />\r\n            <Button type=\"primary\" onClick={handleSaveClick} style={{margin:\"1rem\"}}>Download</Button>\r\n            <Radio.Group onChange={HandleChange} defaultValue=\"kor\" style={{margin:\"1rem\"}}>\r\n              <Radio.Button value=\"kor\">글로벌판</Radio.Button>\r\n              <Radio.Button value=\"jap\">일본판</Radio.Button>\r\n            </Radio.Group>\r\n        </Row>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  dungeon: state.dungeon,\r\n  language: state.language\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  HandleSelect: (value) => dispatch(setDungeon(`${value[0]}_${value[1]}`)),\r\n  HandleChange: (event) => dispatch(setLanguage(event.target.value))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\r\n","import * as types from \"./types\";\r\n\r\nexport const setDungeon = (dungeon) => ({\r\n    type: types.SET_DUNGEON,\r\n    dungeon\r\n})\r\n\r\nexport const setLanguage = (language) => ({\r\n    type: types.SET_LANGUAGE,\r\n    language\r\n})","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport {Row, Col, Typography, Tooltip, Divider} from \"antd\";\r\nimport './DungeonPage.css';\r\n\r\nconst {Title} = Typography;\r\n\r\nfunction DungeonPage({dungeon, language}) {\r\n\r\n    return(\r\n        <div>\r\n            <NavBar/>\r\n\r\n            <div className=\"container\">\r\n            <Row>\r\n                <Col xs={24} md={12}>\r\n                    <div className=\"left\">\r\n                        <Divider style={{fontSize:\"2rem\"}}>{dungeon.name}</Divider>\r\n                        <div className=\"left-profile\">\r\n                            권장레벨 : <b className=\"green\">\r\n                                {dungeon.hard ? dungeon.hard.level : \"X\"}\r\n                            </b> / <b className=\"red\">\r\n                                {dungeon.veryhard ? dungeon.veryhard.level : \"X\"}\r\n                            </b>\r\n                        </div>\r\n                        <div className=\"left-profile\">\r\n                            3번째 칸 : {dungeon.reward}\r\n                        </div>\r\n                        <div className=\"left-profile\">\r\n                            <b className=\"green\">Hard</b> : {dungeon.hard ? dungeon.hard.count : \"없음\"}\r\n                        </div>\r\n                        <div className=\"left-profile\">\r\n                            <b className=\"red\">Very Hard</b> : {dungeon.veryhard ? dungeon.veryhard.count : \"없음\"}\r\n                        </div>\r\n                        {dungeon.map.map(map => (\r\n                            <div className=\"left-map\">\r\n                                <Divider style={{fontSize:\"1.8rem\"}}>Map {map.id}</Divider>\r\n                                <div className=\"left-map-name\" style={{fontSize:\"1.4rem\"}}>\r\n                                    {language === \"kor\" ? map.kor : map.jap}\r\n                                </div>\r\n                                <div className=\"left-map-name\" style={{fontSize:\"1.4rem\"}}>\r\n                                    <b className=\"red\">\r\n                                        {map.kor_rare ? (language === \"kor\" ? map.kor_rare : map.jap_rare) : \"레어맵 없음\"}\r\n                                    </b>\r\n                                </div>\r\n                                <img alt={map.kor} style={{ width: \"90%\"}} src={`/images/map/${dungeon.name}-${map.id}.jpg`}/>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </Col>\r\n                <Col xs={24} md={12}>\r\n                    <div className=\"right\">\r\n                        <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>직업서 (Very Hard)</Divider>\r\n                        <Row justify=\"center\">                        \r\n                            {dungeon.job === null ? (<Title level={2}>없음</Title>) : (dungeon.job.map(job => (\r\n                                <Col span={4}>\r\n                                <Tooltip title={job}>\r\n                                    <img alt={job} style={{ width: \"100%\"}} src={`/images/character/${job}.png`}/>\r\n                                </Tooltip>\r\n                                </Col>\r\n                            )))}\r\n                        </Row>\r\n                        <br/>\r\n                        <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>천명작</Divider>\r\n                        <Row justify=\"center\">                        \r\n                            {dungeon.statusup === null ? (<Title level={2}>없음</Title>) : (dungeon.statusup.map(job => (\r\n                                <Col span={4}>\r\n                                <Tooltip title={job}>\r\n                                    <img alt={job} style={{ width: \"100%\"}} src={`/images/character/${job}.png`}/>\r\n                                </Tooltip>\r\n                                </Col>\r\n                            )))}\r\n                        </Row>\r\n                        <br/>\r\n                        {dungeon.multiple ? (\r\n                            <div>\r\n                                <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>배수 캐릭터</Divider>\r\n                                <Row justify=\"center\">                        \r\n                                    {dungeon.multiple.map(job => (\r\n                                        <Col span={4}>\r\n                                        <Tooltip title={job}>\r\n                                            <img alt={job} style={{ width: \"100%\"}}src={`/images/character/${job}.png`}/>\r\n                                        </Tooltip>\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            </div>\r\n                        ) : null}\r\n                        <br/>\r\n                        <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>Monster &#38; Fear</Divider>\r\n                        <Row justify=\"center\" style={{borderBottom: \"1px solid lightgray\", paddingBottom: \"10px\"}}> \r\n                            <Col span={5}>이미지</Col>\r\n                            <Col span={5}>약점</Col>\r\n                            <Col span={5}>내성</Col>\r\n                            <Col span={5}>비고</Col>\r\n                        </Row>\r\n                        {dungeon.monster ? (\r\n                            dungeon.monster.map(monster => (\r\n                                <Row justify=\"center\" align=\"middle\" style={{borderBottom: \"1px solid lightgray\"}}>\r\n                                    <Col span={5} style={{borderRight: \"1px solid lightgray\"}}>\r\n                                        <img alt = {monster.id} style={{ width: \"60%\"}} src={`images/monster/${dungeon.name}_${monster.id}.jpg`}/>\r\n                                    </Col>\r\n                                    <Col span={5}>\r\n                                        {monster.weak === null ? \r\n                                        <Title level={2}>없음</Title>\r\n                                        : (monster.weak.map(type => (\r\n                                            <Tooltip title={type}>\r\n                                                <img alt = {type} style={{ width: \"23%\"}} src={`images/types/${type}.png`}/>\r\n                                            </Tooltip>\r\n                                        )))}\r\n                                    </Col>\r\n                                    <Col span={5}>\r\n                                        {monster.strong === null ? \r\n                                        <Title level={2}>없음</Title>\r\n                                        : (monster.strong.map(type => (\r\n                                            <Tooltip title={type}>\r\n                                                <img alt = {type} style={{ width: \"23%\"}} src={`images/types/${type}.png`}/>\r\n                                            </Tooltip>\r\n                                        )))}\r\n                                    </Col>\r\n                                    <Col span={5}>\r\n                                        {monster.description ? \r\n                                        <b className=\"red\" style={{fontSize:\"1.4rem\"}}>{monster.description}</b>\r\n                                        : null}\r\n                                    </Col>\r\n                                </Row>\r\n                            ))\r\n                        ) : null}\r\n                        <br/>\r\n                        <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>BOSS</Divider>\r\n                        <Row justify=\"center\" style={{paddingBottom: \"10px\"}}> \r\n                            <Col span={5}>이미지</Col>\r\n                            <Col span={5}>약점</Col>\r\n                            <Col span={5}>내성</Col>\r\n                        </Row>\r\n                        <Row justify=\"center\" align=\"middle\" style={{marginBottom: \"20px\"}}>\r\n                            <Col span={5}>\r\n                                <img alt =\"boss\" style={{ width: \"80%\"}} src={`images/monster/${dungeon.name}_boss.jpg`}/>\r\n                            </Col>    \r\n                            <Col span={5}>\r\n                                    {dungeon.boss.weak === null ? <Title level={2}>없음</Title> : \r\n                                    (dungeon.boss.weak.map(type => (\r\n                                        <Tooltip title={type}>\r\n                                            <img alt = {type} style={{ width: \"23%\"}} src={`images/types/${type}.png`}/>\r\n                                        </Tooltip>\r\n                                    )))}\r\n                            </Col>\r\n                            <Col span={5}>\r\n                                    {dungeon.boss.strong === null ? <Title level={2}>없음</Title> : \r\n                                    (dungeon.boss.strong.map(type => (\r\n                                        <Tooltip title={type}>\r\n                                            <img alt = {type} style={{ width: \"23%\"}} src={`images/types/${type}.png`}/>\r\n                                        </Tooltip>\r\n                                    )))}\r\n                            </Col>\r\n                        </Row>\r\n                        {dungeon.boss.description.map(desc => (\r\n                                <Title level={5}>{desc}</Title>\r\n                        ))}\r\n                        <br/>\r\n                        <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>기타 특이사항</Divider>\r\n                            {dungeon.etc.map(etc =>( \r\n                                <Title level={5}>{etc}</Title>\r\n                            ))}\r\n                        \r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    dungeon: state.dungeon,\r\n    language: state.language\r\n})\r\n\r\nexport default connect(mapStateToProps)(DungeonPage)\r\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport DungeonPage from \"./views/DungeonPage/DungeonPage\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route exact path=\"/\" component={DungeonPage}/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from \"../_actions/types\";\r\nimport present_beast_castle from \"../data/present_beast_castle.json\";\r\nimport ancient_zer_jung from \"../data/ancient_zer_jung.json\";\r\n\r\nconst dungeons = {\r\n    present_beast_castle: present_beast_castle,\r\n    ancient_zer_jung: ancient_zer_jung\r\n}\r\n\r\nconst initialState = {\r\n    dungeon: dungeons.ancient_zer_jung,\r\n    language: \"kor\"\r\n}\r\n\r\nconst counter = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case types.SET_DUNGEON:\r\n            return {\r\n                ...state,\r\n                dungeon: dungeons[action.dungeon]\r\n            }\r\n        case types.SET_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                language: action.language\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\nimport {createStore} from 'redux';\nimport counter from './_reducers/reducer';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(counter);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}