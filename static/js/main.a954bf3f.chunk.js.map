{"version":3,"sources":["_actions/types.js","views/NavBar/NavBar.js","_actions/actions.js","views/DungeonPage/DungeonPage.js","App.js","reportWebVitals.js","_reducers/reducer.js","index.js"],"names":["SET_DUNGEON","SET_LANGUAGE","Title","Typography","connect","state","dungeon","language","dispatch","HandleSelect","value","type","types","HandleChange","event","target","justify","style","marginTop","level","defaultValue","options","label","children","onChange","allowClear","margin","onClick","domtoimage","toJpeg","document","querySelector","quality","then","dataUrl","link","createElement","download","name","console","log","href","click","Group","Button","className","xs","md","fontSize","hard","veryhard","reward","count","map","id","kor","jap","kor_rare","jap_rare","alt","width","src","orientation","job","span","title","statusup","multiple","character","rate","borderBottom","paddingBottom","monster","align","borderRight","weak","strong","description","boss","members","marginBottom","desc","etc","App","exact","path","component","DungeonPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","dungeons","present_beast_castle","ancient_zer_jung","ancient_zer_thund","future_mayu","present_dogma","present_moon","future_industry","ancient_nadara","ancient_swamp","present_miglance","future_zeno","future_ship","ancient_time","future_corridor","ancient_star","present_damak","future_toto","present_fire_beast","present_weird","future_kms","present_labyrinth","future_saki","ancient_dragon","etc_exp","etc_git","future_garden","present_mementos","ancient_tales","initialState","counter","action","store","createStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a954bf3f.chunk.js","sourcesContent":["export const SET_DUNGEON = 'SET_DUNGEON';\r\nexport const SET_LANGUAGE = 'SET_LANGUAGE';","import React from 'react'\r\nimport { Row, Cascader, Radio, Button, Typography } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { setDungeon, setLanguage } from \"../../_actions/actions\";\r\nimport domtoimage from 'dom-to-image';\r\n\r\nconst {Title} = Typography;\r\n\r\nfunction NavBar({dungeon, language, HandleSelect, HandleChange}) {\r\n            \r\n    const options = [\r\n        {\r\n          value: 'ancient',\r\n          label: '고대',\r\n          children: [\r\n            {\r\n              value: 'nadara',\r\n              label: '나다라 화산',\r\n            }, {\r\n              value: 'star',\r\n              label: '별의 탑',\r\n            }, {\r\n              value: 'time',\r\n              label: '시간의 탑',\r\n            },{\r\n              value: 'swamp',\r\n              label: '식인 늪',\r\n            },{\r\n              value: 'dragon',\r\n              label: '용궁성',\r\n            }, {\r\n              value: 'zer_thund',\r\n              label: '제르베리야(뇌)',\r\n            }, {\r\n              value: 'zer_jung',\r\n              label: '제르베리야(정)',\r\n            }, {\r\n              value: 'tales',\r\n              label: '환시가 꿈꾸는 이야기',\r\n            }\r\n          ],\r\n        }, {\r\n          value: 'present',\r\n          label: '현대',\r\n          children: [\r\n            {\r\n              value: 'weird',\r\n              label: '기묘한 숲',\r\n            },{\r\n              value: 'moon',\r\n              label: '달그림자 숲',\r\n            }, {\r\n              value: 'dogma',\r\n              label: '도그마의 탑',\r\n            }, {\r\n              value: 'beast_castle',\r\n              label: '마수성',\r\n            },{\r\n              value: 'mementos',\r\n              label: '메멘토스',\r\n            }, {\r\n              value: 'miglance',\r\n              label: '미글랜스 성',\r\n            },{\r\n              value: 'labyrinth',\r\n              label: '미글랜스 지하미궁',\r\n            },{\r\n              value: 'damak',\r\n              label: '뱀의 간 다마크',\r\n            },{\r\n              value: 'fire_beast',\r\n              label: '불타는 마수성',\r\n            }\r\n          ],\r\n        }, {\r\n          value: 'future',\r\n          label: '미래',\r\n          children: [\r\n            {\r\n              value: 'industry',\r\n              label: '공업도시 폐허',\r\n            },{\r\n              value: 'garden',\r\n              label: '공중정원',\r\n            },{\r\n              value: 'kms',\r\n              label: '구 KMS 본사',\r\n            }, {\r\n              value: 'mayu',\r\n              label: '마유의 꿈 의식',\r\n            },{\r\n              value: 'saki',\r\n              label: '사키의 꿈 의식',\r\n            }, {\r\n              value: 'corridor',\r\n              label: '시층회랑'\r\n            },{\r\n              value: 'zeno',\r\n              label: '제노 도메인'\r\n            }, {\r\n              value: 'ship',\r\n              label: '차원전함'\r\n            },{\r\n              value: 'toto',\r\n              label: '토토 드림랜드'\r\n            }\r\n          ],\r\n        },{\r\n          value: 'etc',\r\n          label: '기타',\r\n          children: [\r\n            {\r\n              value: 'exp',\r\n              label: '봉역 - 어렴풋한 시각의 틈새',\r\n            },{\r\n              value: 'git',\r\n              label: '봉역 - 덧없는 시각의 틈새',\r\n            }\r\n          ],\r\n        }\r\n      ];\r\n    \r\n    const handleSaveClick = () => {\r\n      domtoimage.toJpeg(document.querySelector('.container'), { quality: 1 })\r\n      .then(function (dataUrl) {\r\n          var link = document.createElement('a');\r\n          link.download = `${dungeon.name}_${language}.jpeg`;\r\n          console.log(link);\r\n          link.href = dataUrl;\r\n          link.click();\r\n      });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <Row justify=\"center\" style={{marginTop: \"1rem\"}}>\r\n            <Title level={5}>미등록 던전 : 가를레아 대륙, 이경, 루차나 고적</Title>\r\n          </Row>\r\n          <Row justify=\"center\">\r\n              <Cascader\r\n                  defaultValue={['ancient', 'zer_jung']}\r\n                  options={options}\r\n                  onChange={HandleSelect} \r\n                  allowClear={false}\r\n                  style={{margin:\"1rem\"}}\r\n              />\r\n              <Button type=\"primary\" onClick={handleSaveClick} style={{margin:\"1rem\"}}>Download</Button>\r\n              <Radio.Group onChange={HandleChange} defaultValue=\"kor\" style={{margin:\"1rem\"}}>\r\n                <Radio.Button value=\"kor\">글로벌판</Radio.Button>\r\n                <Radio.Button value=\"jap\">일본판</Radio.Button>\r\n              </Radio.Group>\r\n          </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  dungeon: state.dungeon,\r\n  language: state.language\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  HandleSelect: (value) => dispatch(setDungeon(`${value[0]}_${value[1]}`)),\r\n  HandleChange: (event) => dispatch(setLanguage(event.target.value))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\r\n","import * as types from \"./types\";\r\n\r\nexport const setDungeon = (dungeon) => ({\r\n    type: types.SET_DUNGEON,\r\n    dungeon\r\n})\r\n\r\nexport const setLanguage = (language) => ({\r\n    type: types.SET_LANGUAGE,\r\n    language\r\n})","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport {Row, Col, Typography, Tooltip, Divider} from \"antd\";\r\nimport './DungeonPage.css';\r\n\r\nconst {Title} = Typography;\r\n\r\nfunction DungeonPage({dungeon, language}) {\r\n\r\n    return(\r\n        <div>\r\n            <NavBar/>\r\n\r\n            <div className=\"container\">\r\n            <Row>\r\n                <Col xs={24} md={12}>\r\n                    <div className=\"left\">\r\n                        <Divider style={{fontSize:\"2rem\"}}>{dungeon.name}</Divider>\r\n                        <div className=\"left-profile\">\r\n                            권장레벨 : <b className=\"green\">\r\n                                {dungeon.hard ? dungeon.hard.level : \"X\"}\r\n                            </b> / <b className=\"red\">\r\n                                {dungeon.veryhard ? dungeon.veryhard.level : \"X\"}\r\n                            </b>\r\n                        </div>\r\n                        <div className=\"left-profile\">\r\n                            3번째 칸 : {dungeon.reward}\r\n                        </div>\r\n                        <div className=\"left-profile\">\r\n                            <b className=\"green\">Hard</b> : {dungeon.hard ? dungeon.hard.count : \"없음\"}\r\n                        </div>\r\n                        <div className=\"left-profile\">\r\n                            <b className=\"red\">Very Hard</b> : {dungeon.veryhard ? dungeon.veryhard.count : \"없음\"}\r\n                        </div>\r\n                        {dungeon.map.map(map => (\r\n                            <div className=\"left-map\">\r\n                                <Divider style={{fontSize:\"1.8rem\"}}>Map {map.id}</Divider>\r\n                                <div className=\"left-map-name\" style={{fontSize:\"1.4rem\"}}>\r\n                                    {language === \"kor\" ? map.kor : map.jap}\r\n                                </div>\r\n                                <div className=\"left-map-name\" style={{fontSize:\"1.4rem\"}}>\r\n                                    <b className=\"red\">\r\n                                        {map.kor_rare ? (language === \"kor\" ? map.kor_rare : map.jap_rare) : \"레어맵 없음\"}\r\n                                    </b>\r\n                                </div>\r\n                                <img alt={map.kor} style={{ width: \"90%\"}} src={`images/map_photo/${dungeon.name}-${map.id}.jpg`}/>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </Col>\r\n                <Col xs={24} md={12}>\r\n                    <div className=\"right\">\r\n                        <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>직업서 (Very Hard)</Divider>\r\n                        <Row justify=\"center\">                        \r\n                            {dungeon.job === null ? (<Title level={2}>없음</Title>) : (dungeon.job.map(job => (\r\n                                <Col span={4}>\r\n                                <Tooltip title={job}>\r\n                                    <img alt={job} style={{ width: \"100%\"}} src={`images/character_base/${job}.png`}/>\r\n                                </Tooltip>\r\n                                </Col>\r\n                            )))}\r\n                        </Row>\r\n                        <br/>\r\n                        <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>천명작</Divider>\r\n                        <Row justify=\"center\">                        \r\n                            {dungeon.statusup === null ? (<Title level={2}>없음</Title>) : (dungeon.statusup.map(job => (\r\n                                <Col span={4}>\r\n                                <Tooltip title={job}>\r\n                                    <img alt={job} style={{ width: \"100%\"}} src={`images/character_base/${job}.png`}/>\r\n                                </Tooltip>\r\n                                </Col>\r\n                            )))}\r\n                        </Row>\r\n                        <br/>\r\n                        {dungeon.multiple ? (\r\n                            <div>\r\n                                <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>배수 캐릭터</Divider>\r\n                                <Row justify=\"center\">                        \r\n                                    {dungeon.multiple.character.map(job => (\r\n                                        <Col span={4}>\r\n                                        <Tooltip title={`${job.name} : ${job.rate}`}>\r\n                                            <img alt={job.name} style={{ width: \"100%\"}}src={`images/character_base/${job.name}.png`}/>\r\n                                        </Tooltip>\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            </div>\r\n                        ) : null}\r\n                        <br/>\r\n                        <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>Monster &#38; Fear</Divider>\r\n                        <Row justify=\"center\" style={{borderBottom: \"1px solid lightgray\", paddingBottom: \"10px\"}}> \r\n                            <Col span={5}>이미지</Col>\r\n                            <Col span={6}>약점</Col>\r\n                            <Col span={6}>내성</Col>\r\n                            <Col span={5}>비고</Col>\r\n                        </Row>\r\n                        {dungeon.monster ? (\r\n                            dungeon.monster.map(monster => (\r\n                                <Row justify=\"center\" align=\"middle\" style={{borderBottom: \"1px solid lightgray\"}}>\r\n                                    <Col span={5} style={{borderRight: \"1px solid lightgray\"}}>\r\n                                        <img alt = {monster.id} style={{ width: \"60%\"}} src={`images/monster/${dungeon.name}_${monster.id}.jpg`}/>\r\n                                    </Col>\r\n                                    <Col span={6}>\r\n                                        {monster.weak === null ? \r\n                                        <Title level={2}>없음</Title>\r\n                                        : (monster.weak.map(type => (\r\n                                            <Tooltip title={type}>\r\n                                                <img alt = {type} style={{ width: \"23%\"}} src={`images/types/${type}.png`}/>\r\n                                            </Tooltip>\r\n                                        )))}\r\n                                    </Col>\r\n                                    <Col span={6}>\r\n                                        {monster.strong === null ? \r\n                                        <Title level={2}>없음</Title>\r\n                                        : (monster.strong.map(type => (\r\n                                            <Tooltip title={type}>\r\n                                                <img alt = {type} style={{ width: \"23%\"}} src={`images/types/${type}.png`}/>\r\n                                            </Tooltip>\r\n                                        )))}\r\n                                    </Col>\r\n                                    <Col span={5}>\r\n                                        {monster.description ? \r\n                                        <b className=\"red\" style={{fontSize:\"1.4rem\"}}>{monster.description}</b>\r\n                                        : null}\r\n                                    </Col>\r\n                                </Row>\r\n                            ))\r\n                        ) : null}\r\n                        <br/>\r\n                        <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>BOSS</Divider>\r\n                        <Row justify=\"center\" style={{paddingBottom: \"10px\"}}> \r\n                            <Col span={5}>이미지</Col>\r\n                            <Col span={7}>약점</Col>\r\n                            <Col span={7}>내성</Col>\r\n                        </Row>\r\n                        {dungeon.boss.members.map(boss => (\r\n                            <Row justify=\"center\" align=\"middle\" style={{marginBottom: \"20px\"}}>\r\n                            <Col span={5}>\r\n                                <img alt =\"boss\" style={{ width: \"80%\"}} src={`images/monster/${dungeon.name}_boss${boss.id}.jpg`}/>\r\n                            </Col>    \r\n                            <Col span={7}>\r\n                                    {boss.weak === null ? <Title level={2}>없음</Title> : \r\n                                    (boss.weak.map(type => (\r\n                                        <Tooltip title={type}>\r\n                                            <img alt = {type} style={{ width: \"23%\"}} src={`images/types/${type}.png`}/>\r\n                                        </Tooltip>\r\n                                    )))}\r\n                            </Col>\r\n                            <Col span={7}>\r\n                                    {boss.strong === null ? <Title level={2}>없음</Title> : \r\n                                    (boss.strong.map(type => (\r\n                                        <Tooltip title={type}>\r\n                                            <img alt = {type} style={{ width: \"23%\"}} src={`images/types/${type}.png`}/>\r\n                                        </Tooltip>\r\n                                    )))}\r\n                            </Col>\r\n                            </Row>\r\n                        ))}\r\n                        \r\n                        {dungeon.boss.description.map(desc => (\r\n                                <Title level={5}>{desc}</Title>\r\n                        ))}\r\n                        <br/>\r\n                        <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>기타 특이사항</Divider>\r\n                            {dungeon.etc.map(etc =>( \r\n                                <Title level={5}>{etc}</Title>\r\n                            ))}\r\n                        \r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    dungeon: state.dungeon,\r\n    language: state.language\r\n})\r\n\r\nexport default connect(mapStateToProps)(DungeonPage)\r\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport DungeonPage from \"./views/DungeonPage/DungeonPage\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Route exact path=\"/\" component={DungeonPage}/>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from \"../_actions/types\";\r\n\r\nimport ancient_zer_jung from \"../data/ancient_zer_jung.json\";\r\nimport ancient_zer_thund from \"../data/ancient_zer_thund.json\";\r\nimport ancient_nadara from \"../data/ancient_nadara.json\";\r\nimport ancient_swamp from \"../data/ancient_swamp.json\";\r\nimport ancient_time from \"../data/ancient_time.json\";\r\nimport ancient_star from \"../data/ancient_star.json\";\r\nimport ancient_dragon from \"../data/ancient_dragon.json\";\r\nimport ancient_tales from \"../data/ancient_tales.json\";\r\nimport future_mayu from \"../data/future_mayu.json\";\r\nimport future_saki from \"../data/future_saki.json\";\r\nimport future_zeno from \"../data/future_zeno.json\";\r\nimport future_ship from \"../data/future_ship.json\";\r\nimport future_toto from \"../data/future_toto.json\";\r\nimport future_garden from \"../data/future_garden.json\";\r\nimport future_kms from \"../data/future_kms.json\";\r\nimport future_corridor from \"../data/future_corridor.json\";\r\nimport future_industry from \"../data/future_industry.json\";\r\nimport present_dogma from \"../data/present_dogma.json\"\r\nimport present_moon from \"../data/present_moon.json\"\r\nimport present_damak from \"../data/present_damak.json\"\r\nimport present_miglance from \"../data/present_miglance.json\"\r\nimport present_beast_castle from \"../data/present_beast_castle.json\";\r\nimport present_fire_beast from \"../data/present_fire_beast.json\";\r\nimport present_weird from \"../data/present_weird.json\";\r\nimport present_labyrinth from \"../data/present_labyrinth.json\";\r\nimport present_mementos from \"../data/present_mementos.json\";\r\nimport etc_exp from \"../data/etc_exp.json\";\r\nimport etc_git from \"../data/etc_git.json\";\r\n\r\nconst dungeons = {\r\n    present_beast_castle: present_beast_castle,\r\n    ancient_zer_jung: ancient_zer_jung,\r\n    ancient_zer_thund: ancient_zer_thund,\r\n    future_mayu: future_mayu,\r\n    present_dogma: present_dogma,\r\n    present_moon: present_moon,\r\n    future_industry: future_industry,\r\n    ancient_nadara: ancient_nadara,\r\n    ancient_swamp: ancient_swamp,\r\n    present_miglance: present_miglance,\r\n    future_zeno: future_zeno,\r\n    future_ship: future_ship,\r\n    ancient_time: ancient_time,\r\n    future_corridor: future_corridor,\r\n    ancient_star: ancient_star,\r\n    present_damak: present_damak,\r\n    future_toto: future_toto,\r\n    present_fire_beast: present_fire_beast,\r\n    present_weird: present_weird,\r\n    future_kms: future_kms,\r\n    present_labyrinth: present_labyrinth,\r\n    future_saki: future_saki,\r\n    ancient_dragon: ancient_dragon,\r\n    etc_exp: etc_exp,\r\n    etc_git: etc_git,\r\n    future_garden: future_garden,\r\n    present_mementos: present_mementos,\r\n    ancient_tales: ancient_tales\r\n}\r\n\r\nconst initialState = {\r\n    dungeon: dungeons.ancient_zer_jung,\r\n    language: \"kor\"\r\n}\r\n\r\nconst counter = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case types.SET_DUNGEON:\r\n            return {\r\n                ...state,\r\n                dungeon: dungeons[action.dungeon]\r\n            }\r\n        case types.SET_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                language: action.language\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\nimport {createStore} from 'redux';\nimport counter from './_reducers/reducer';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(counter);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}