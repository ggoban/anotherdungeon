{"version":3,"sources":["_actions/types.js","_actions/actions.js","views/NavBar/NavBar.js","views/Footer/Footer.js","views/DungeonPage/DungeonPage.js","views/MainPage/Mainpage.js","views/NavBar/NavBarGarul.js","views/EtcPage/EtcPage.js","views/SearchPage/SearchPage.js","App.js","reportWebVitals.js","_reducers/dungeon_reducer.js","index.js"],"names":["SET_DUNGEON","SET_LANGUAGE","SET_GARUL","setDungeon","dungeon","type","types","setLanguage","language","connect","state","dispatch","HandleSelect","value","window","localStorage","setItem","HandleChange","event","target","useState","getItem","Time","DungeonName","justify","defaultValue","options","label","children","onChange","allowClear","style","margin","onClick","domtoimage","toJpeg","document","querySelector","quality","then","dataUrl","link","createElement","download","name","console","log","href","click","Group","Button","Footer","textAlign","padding","Title","Typography","withRouter","className","xs","md","fontSize","hard","level","veryhard","reward","count","map","id","kor","jap","kor_rare","jap_rare","alt","width","src","orientation","job","span","title","statusup","multiple","character","rate","borderBottom","paddingBottom","monster","align","borderRight","weak","strong","description","boss","members","marginBottom","desc","etc","Meta","Card","paddingTop","lg","to","hoverable","cover","Option","Select","garul_time","HandleGarul","GarulTime","rel","sm","first","marginRight","boxmap","marginTop","comment","lineHeight","items","item","Search","Input","HandleLink","e","info","books","find","element","includes","innerText","time","dungeonname","SearchName","setSearchName","filtered","filter","length","jobNotParsed","forEach","a","push","jobParsed","Set","renderSearch","jobname","bodyStyle","paddingLeft","paddingRight","placeholder","enterButton","App","exact","path","component","MainPage","DungeonPage","EtcPage","SearchPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","garuls","present","ancient","future","gold","dungeons","present_beast_castle","ancient_zer_jung","ancient_zer_thund","future_mayu","present_dogma","present_moon","future_industry","ancient_nadara","ancient_swamp","present_miglance","future_zeno","future_ship","ancient_time","future_corridor","ancient_star","present_damak","future_toto","present_fire_beast","present_weird","future_kms","present_labyrinth","future_saki","ancient_dragon","etc_exp","etc_git","future_garden","present_mementos","ancient_tales","initialState","counter","action","store","createStore","reducers","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9831c89c.chunk.js","sourcesContent":["export const SET_DUNGEON = 'SET_DUNGEON';\r\nexport const SET_LANGUAGE = 'SET_LANGUAGE';\r\nexport const SET_GARUL = 'SET_GARUL';\r\n\r\n/*-- \r\n    Copyright (c) 2021, Hyun Uk Lee \r\n \r\n    This file is licenced under a Creative Commons license: \r\n    http://creativecommons.org/licenses/by/2.5/ \r\n--*/  ","import * as types from \"./types\";\r\n\r\nexport const setDungeon = (dungeon) => ({\r\n    type: types.SET_DUNGEON,\r\n    dungeon\r\n})\r\n\r\nexport const setLanguage = (language) => ({\r\n    type: types.SET_LANGUAGE,\r\n    language\r\n})\r\n\r\nexport const setGarul = (garul_time) => ({\r\n    type: types.SET_GARUL,\r\n    garul_time\r\n})\r\n\r\n/*-- \r\n    Copyright (c) 2021, Hyun Uk Lee \r\n \r\n    This file is licenced under a Creative Commons license: \r\n    http://creativecommons.org/licenses/by/2.5/ \r\n--*/  ","import React, {useState} from 'react'\r\nimport { Row, Cascader, Radio, Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { setDungeon, setLanguage } from \"../../_actions/actions\";\r\nimport domtoimage from 'dom-to-image';\r\n\r\n/*-- \r\n    Copyright (c) 2021, Hyun Uk Lee \r\n \r\n    This file is licenced under a Creative Commons license: \r\n    http://creativecommons.org/licenses/by/2.5/ \r\n--*/  \r\n\r\nfunction NavBar({dungeon, language, HandleSelect, HandleChange}) {\r\n    \r\n    const [Time, setTime] = useState(window.localStorage.getItem(\"Time\") ? window.localStorage.getItem(\"Time\") : \"ancient\");\r\n    const [DungeonName, setDungeonName] = useState(window.localStorage.getItem(\"Dungeon\") ? window.localStorage.getItem(\"Dungeon\") : \"nadara\");\r\n    const options = [\r\n        {\r\n          value: 'ancient',\r\n          label: '고대',\r\n          children: [\r\n            {\r\n              value: 'nadara',\r\n              label: '나다라 화산',\r\n            }, {\r\n              value: 'star',\r\n              label: '별의 탑',\r\n            }, {\r\n              value: 'time',\r\n              label: '시간의 탑',\r\n            },{\r\n              value: 'swamp',\r\n              label: '식인 늪',\r\n            },{\r\n              value: 'dragon',\r\n              label: '용궁성',\r\n            }, {\r\n              value: 'zer_thund',\r\n              label: '제르베리야(뇌)',\r\n            }, {\r\n              value: 'zer_jung',\r\n              label: '제르베리야(정)',\r\n            }, {\r\n              value: 'tales',\r\n              label: '환시가 꿈꾸는 이야기',\r\n            }\r\n          ],\r\n        }, {\r\n          value: 'present',\r\n          label: '현대',\r\n          children: [\r\n            {\r\n              value: 'weird',\r\n              label: '기묘한 숲',\r\n            },{\r\n              value: 'moon',\r\n              label: '달그림자 숲',\r\n            }, {\r\n              value: 'dogma',\r\n              label: '도그마의 탑',\r\n            }, {\r\n              value: 'beast_castle',\r\n              label: '마수성',\r\n            },{\r\n              value: 'mementos',\r\n              label: '메멘토스',\r\n            }, {\r\n              value: 'miglance',\r\n              label: '미글랜스 성',\r\n            },{\r\n              value: 'labyrinth',\r\n              label: '미글랜스 지하미궁',\r\n            },{\r\n              value: 'damak',\r\n              label: '뱀의 간 다마크',\r\n            },{\r\n              value: 'fire_beast',\r\n              label: '불타는 마수성',\r\n            }\r\n          ],\r\n        }, {\r\n          value: 'future',\r\n          label: '미래',\r\n          children: [\r\n            {\r\n              value: 'industry',\r\n              label: '공업도시 폐허',\r\n            },{\r\n              value: 'garden',\r\n              label: '공중정원',\r\n            },{\r\n              value: 'kms',\r\n              label: '구 KMS 본사',\r\n            }, {\r\n              value: 'mayu',\r\n              label: '마유의 꿈 의식',\r\n            },{\r\n              value: 'saki',\r\n              label: '사키의 꿈 의식',\r\n            }, {\r\n              value: 'corridor',\r\n              label: '시층회랑'\r\n            },{\r\n              value: 'zeno',\r\n              label: '제노 도메인'\r\n            }, {\r\n              value: 'ship',\r\n              label: '차원전함'\r\n            },{\r\n              value: 'toto',\r\n              label: '토토 드림랜드'\r\n            }\r\n          ],\r\n        },{\r\n          value: 'etc',\r\n          label: '기타',\r\n          children: [\r\n            {\r\n              value: 'exp',\r\n              label: '봉역 - 어렴풋한 시각의 틈새',\r\n            },{\r\n              value: 'git',\r\n              label: '봉역 - 덧없는 시각의 틈새',\r\n            }\r\n          ],\r\n        }\r\n      ];\r\n\r\n    const handleSaveClick = () => {\r\n      domtoimage.toJpeg(document.querySelector('.container'), { quality: 1 })\r\n      .then(function (dataUrl) {\r\n          var link = document.createElement('a');\r\n          link.download = `${dungeon.name}_${language}.jpeg`;\r\n          console.log(link);\r\n          link.href = dataUrl;\r\n          link.click();\r\n      });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <Row justify=\"center\">\r\n              <Cascader\r\n                  defaultValue={[Time, DungeonName]}\r\n                  options={options}\r\n                  onChange={HandleSelect} \r\n                  allowClear={false}\r\n                  style={{margin:\"1rem\"}}\r\n              />\r\n              <Button type=\"primary\" onClick={handleSaveClick} style={{margin:\"1rem\"}}>Download</Button>\r\n              <Radio.Group onChange={HandleChange} defaultValue={language} style={{margin:\"1rem\"}}>\r\n                <Radio.Button value=\"kor\">글로벌판</Radio.Button>\r\n                <Radio.Button value=\"jap\">일본판</Radio.Button>\r\n              </Radio.Group>\r\n          </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  dungeon: state.dungeon,\r\n  language: state.language\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  HandleSelect: (value) => { \r\n    dispatch(setDungeon(`${value[0]}_${value[1]}`));\r\n    window.localStorage.setItem(\"Time\", value[0])\r\n    window.localStorage.setItem(\"Dungeon\", value[1])\r\n  },\r\n  HandleChange: (event) => dispatch(setLanguage(event.target.value))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div style={{textAlign: \"center\", margin:\"1rem\", padding: \"1rem\"}}>\r\n            <h3>Copyright (c) 2021, Hyun Uk Lee</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n\r\n/*-- \r\n    Copyright (c) 2021, Hyun Uk Lee \r\n \r\n    This file is licenced under a Creative Commons license: \r\n    http://creativecommons.org/licenses/by/2.5/ \r\n--*/  ","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport {Row, Col, Typography, Tooltip, Divider} from \"antd\";\r\nimport './DungeonPage.css';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nconst {Title} = Typography;\r\n\r\n/*-- \r\n    Copyright (c) 2021, Hyun Uk Lee \r\n \r\n    This file is licenced under a Creative Commons license: \r\n    http://creativecommons.org/licenses/by/2.5/ \r\n--*/  \r\n\r\nfunction DungeonPage({dungeon, language}) {\r\n\r\n    console.log(dungeon)\r\n\r\n    return(\r\n        <div>\r\n            <NavBar/>\r\n\r\n            <div className=\"container\">\r\n            <Row>\r\n                <Col xs={24} md={12}>\r\n                    <div className=\"left\">\r\n                        <Divider style={{fontSize:\"2rem\"}}>{dungeon.name}</Divider>\r\n                        <div className=\"left-profile\">\r\n                            권장레벨 : <b className=\"green\">\r\n                                {dungeon.hard ? dungeon.hard.level : \"X\"}\r\n                            </b> / <b className=\"red\">\r\n                                {dungeon.veryhard ? dungeon.veryhard.level : \"X\"}\r\n                            </b>\r\n                        </div>\r\n                        <div className=\"left-profile\">\r\n                            3번째 칸 : {dungeon.reward}\r\n                        </div>\r\n                        <div className=\"left-profile\">\r\n                            <b className=\"green\">Hard</b> : {dungeon.hard ? dungeon.hard.count : \"없음\"}\r\n                        </div>\r\n                        <div className=\"left-profile\">\r\n                            <b className=\"red\">Very Hard</b> : {dungeon.veryhard ? dungeon.veryhard.count : \"없음\"}\r\n                        </div>\r\n                        {dungeon.map.map(map => (\r\n                            <div className=\"left-map\">\r\n                                <Divider style={{fontSize:\"1.8rem\"}}>Map {map.id}</Divider>\r\n                                <div className=\"left-map-name\" style={{fontSize:\"1.4rem\"}}>\r\n                                    {language === \"kor\" ? map.kor : map.jap}\r\n                                </div>\r\n                                <div className=\"left-map-name\" style={{fontSize:\"1.4rem\"}}>\r\n                                    <b className=\"red\">\r\n                                        {map.kor_rare ? (language === \"kor\" ? map.kor_rare : map.jap_rare) : \"레어맵 없음\"}\r\n                                    </b>\r\n                                </div>\r\n                                <img alt={map.kor} style={{ width: \"90%\"}} src={`images/map_photo/${dungeon.name}-${map.id}.jpg`}/>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </Col>\r\n                <Col xs={24} md={12}>\r\n                    <div className=\"right\">\r\n                        <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>직업서 (Very Hard)</Divider>\r\n                        <Row justify=\"center\">                        \r\n                            {dungeon.job === null ? (<Title level={2}>없음</Title>) : (dungeon.job.map(job => (\r\n                                <Col span={4}>\r\n                                <Tooltip title={job}>\r\n                                    <img alt={job} style={{ width: \"100%\"}} src={`images/character_base/${job}.png`}/>\r\n                                </Tooltip>\r\n                                </Col>\r\n                            )))}\r\n                        </Row>\r\n                        <br/>\r\n                        <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>천명작</Divider>\r\n                        <Row justify=\"center\">                        \r\n                            {dungeon.statusup === null ? (<Title level={2}>없음</Title>) : (dungeon.statusup.map(job => (\r\n                                <Col span={4}>\r\n                                <Tooltip title={job}>\r\n                                    <img alt={job} style={{ width: \"100%\"}} src={`images/character_base/${job}.png`}/>\r\n                                </Tooltip>\r\n                                </Col>\r\n                            )))}\r\n                        </Row>\r\n                        <br/>\r\n                        {dungeon.multiple ? (\r\n                            <div>\r\n                                <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>배수 캐릭터</Divider>\r\n                                <Row justify=\"center\">                        \r\n                                    {dungeon.multiple.character.map(job => (\r\n                                        <Col span={4}>\r\n                                        <Tooltip title={`${job.name} : ${job.rate}`}>\r\n                                            <img alt={job.name} style={{ width: \"100%\"}}src={`images/character_base/${job.name}.png`}/>\r\n                                        </Tooltip>\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            </div>\r\n                        ) : null}\r\n                        <br/>\r\n                        <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>Monster &#38; Fear</Divider>\r\n                        <Row justify=\"center\" style={{borderBottom: \"1px solid lightgray\", paddingBottom: \"10px\"}}> \r\n                            <Col span={5}>이미지</Col>\r\n                            <Col span={6}>약점</Col>\r\n                            <Col span={6}>내성</Col>\r\n                            <Col span={5}>비고</Col>\r\n                        </Row>\r\n                        {dungeon.monster ? (\r\n                            dungeon.monster.map(monster => (\r\n                                <Row justify=\"center\" align=\"middle\" style={{borderBottom: \"1px solid lightgray\"}}>\r\n                                    <Col span={5} style={{borderRight: \"1px solid lightgray\"}}>\r\n                                        <img alt = {monster.id} style={{ width: \"60%\"}} src={`images/monster/${dungeon.name}_${monster.id}.jpg`}/>\r\n                                    </Col>\r\n                                    <Col span={6}>\r\n                                        {monster.weak === null ? \r\n                                        <Title level={2}>없음</Title>\r\n                                        : (monster.weak.map(type => (\r\n                                            <Tooltip title={type}>\r\n                                                <img alt = {type} style={{ width: \"23%\"}} src={`images/types/${type}.png`}/>\r\n                                            </Tooltip>\r\n                                        )))}\r\n                                    </Col>\r\n                                    <Col span={6}>\r\n                                        {monster.strong === null ? \r\n                                        <Title level={2}>없음</Title>\r\n                                        : (monster.strong.map(type => (\r\n                                            <Tooltip title={type}>\r\n                                                <img alt = {type} style={{ width: \"23%\"}} src={`images/types/${type}.png`}/>\r\n                                            </Tooltip>\r\n                                        )))}\r\n                                    </Col>\r\n                                    <Col span={5}>\r\n                                        {monster.description ? \r\n                                        <b className=\"red\" style={{fontSize:\"1.4rem\"}}>{monster.description}</b>\r\n                                        : null}\r\n                                    </Col>\r\n                                </Row>\r\n                            ))\r\n                        ) : null}\r\n                        <br/>\r\n                        <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>BOSS</Divider>\r\n                        <Row justify=\"center\" style={{paddingBottom: \"10px\"}}> \r\n                            <Col span={5}>이미지</Col>\r\n                            <Col span={7}>약점</Col>\r\n                            <Col span={7}>내성</Col>\r\n                        </Row>\r\n                        {dungeon.boss.members.map(boss => (\r\n                            <Row justify=\"center\" align=\"middle\" style={{marginBottom: \"20px\"}}>\r\n                            <Col span={5}>\r\n                                <img alt =\"boss\" style={{ width: \"80%\"}} src={`images/monster/${dungeon.name}_boss${boss.id}.jpg`}/>\r\n                            </Col>    \r\n                            <Col span={7}>\r\n                                    {boss.weak === null ? <Title level={2}>없음</Title> : \r\n                                    (boss.weak.map(type => (\r\n                                        <Tooltip title={type}>\r\n                                            <img alt = {type} style={{ width: \"23%\"}} src={`images/types/${type}.png`}/>\r\n                                        </Tooltip>\r\n                                    )))}\r\n                            </Col>\r\n                            <Col span={7}>\r\n                                    {boss.strong === null ? <Title level={2}>없음</Title> : \r\n                                    (boss.strong.map(type => (\r\n                                        <Tooltip title={type}>\r\n                                            <img alt = {type} style={{ width: \"23%\"}} src={`images/types/${type}.png`}/>\r\n                                        </Tooltip>\r\n                                    )))}\r\n                            </Col>\r\n                            </Row>\r\n                        ))}\r\n                        \r\n                        {dungeon.boss.description.map(desc => (\r\n                                <Title level={5}>{desc}</Title>\r\n                        ))}\r\n                        <br/>\r\n                        <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>기타 특이사항</Divider>\r\n                            {dungeon.etc.map(etc =>( \r\n                                <Title level={5}>{etc}</Title>\r\n                            ))}\r\n                        \r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            </div>\r\n            <Footer/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    dungeon: state.dungeon,\r\n    language: state.language\r\n})\r\n\r\nexport default connect(mapStateToProps)(withRouter(DungeonPage))\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Row, Col } from 'antd';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nconst { Meta } = Card;\r\n\r\n/*-- \r\n    Copyright (c) 2021, Hyun Uk Lee \r\n \r\n    This file is licenced under a Creative Commons license: \r\n    http://creativecommons.org/licenses/by/2.5/ \r\n--*/  \r\n\r\nfunction Mainpage() {\r\n    return (\r\n        <div style={{paddingTop: \"5rem\"}} className=\"container\">\r\n            <Row justify=\"center\" align=\"middle\">\r\n                <Col xs={12} md={8} lg={6}>\r\n                    <Link to=\"/dungeon\">\r\n                        <Card hoverable\r\n                            style={{width: \"90%\", margin: \"0 auto\"}}\r\n                            cover={<img alt=\"알도\" src=\"images/character_base/알도.png\"/>}\r\n                        >\r\n                            <Meta title=\"중앙/서방 대륙\" description=\"알도를 누르면 일반 던전 정보로 이동합니다.\"/>\r\n                        </Card>\r\n                    </Link>\r\n                </Col>\r\n                <Col xs={12} md={8} lg={6}>\r\n                    <Link to=\"/search\">\r\n                        <Card hoverable\r\n                            style={{width: \"90%\", margin: \"0 auto\"}}\r\n                            cover={<img alt=\"피네\" src=\"images/character_base/피네.png\"/>}\r\n                        >\r\n                            <Meta title=\"직업서 검색\" description=\"피네를 누르면 캐릭터 직업서 검색창으로 이동합니다.\"/>\r\n                        </Card>\r\n                    </Link>\r\n                </Col>\r\n                <Col xs={12} md={8} lg={6}>\r\n                    <Link to=\"/etc\">\r\n                        <Card hoverable\r\n                            style={{width: \"90%\", margin: \"0 auto\"}}\r\n                            cover={<img alt=\"사이러스\" src=\"images/character_base/사이러스.png\"/>}\r\n                        >\r\n                            <Meta title=\"가를레아/루차나 고적\" description=\"사이러스를 누르면 가를레아/루차나 고적 정보로 이동합니다.\"/>\r\n                        </Card>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            <h2><b>이경은 (정말로) 추가 예정이 없습니다.</b></h2>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Mainpage)","import React, {useState} from 'react'\r\nimport { Row, Select, Radio, Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { setGarul, setLanguage } from \"../../_actions/actions\";\r\nimport domtoimage from 'dom-to-image';\r\n\r\nconst {Option} = Select;\r\n\r\n/*-- \r\n    Copyright (c) 2021, Hyun Uk Lee \r\n \r\n    This file is licenced under a Creative Commons license: \r\n    http://creativecommons.org/licenses/by/2.5/ \r\n--*/  \r\n\r\nfunction NavBarGarul({garul_time, language, HandleGarul, HandleChange}) {\r\n    \r\n    const [GarulTime, setGarulTime] = useState(window.localStorage.getItem(\"Garul_Time\") ? window.localStorage.getItem(\"Garul_Time\") : \"present\");\r\n\r\n    const handleSaveClick = () => {\r\n      if(garul_time.name === \"비경 - 루차나 고적\") {\r\n        var link = document.createElement('a');\r\n        link.download = `${garul_time.name}.jpeg`;\r\n        link.href = `images/${garul_time.name}.jpg`;\r\n        link.click();\r\n      } else {\r\n        domtoimage.toJpeg(document.querySelector('.container'), { quality: 1 })\r\n        .then(function (dataUrl) {\r\n            var link = document.createElement('a');\r\n            link.download = `${garul_time.name}_${language}.jpeg`;\r\n            link.href = dataUrl;\r\n            link.click();\r\n        });\r\n      }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <Row justify=\"center\">\r\n              <Select defaultValue={GarulTime} style={{margin:\"1rem\"}}\r\n              onChange={HandleGarul}>\r\n                <Option value=\"ancient\">고대 가를레아 대륙</Option>\r\n                <Option value=\"present\">현대 가를레아 대륙</Option>\r\n                <Option value=\"future\">미래 가를레아 대륙</Option>\r\n                <Option value=\"gold\">비경 - 루차나 고적</Option>\r\n              </Select>\r\n              <Button type=\"primary\" onClick={handleSaveClick} style={{margin:\"1rem\"}}>Download</Button>\r\n              <Radio.Group onChange={HandleChange} defaultValue={language} style={{margin:\"1rem\"}}>\r\n                <Radio.Button value=\"kor\">글로벌판</Radio.Button>\r\n                <Radio.Button value=\"jap\">일본판</Radio.Button>\r\n              </Radio.Group>\r\n          </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  garul_time: state.garul_time,\r\n  language: state.language\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  HandleGarul: (value) => {\r\n    window.localStorage.setItem(\"Garul_Time\", value);\r\n    dispatch(setGarul(value));\r\n  },\r\n  HandleChange: (event) => dispatch(setLanguage(event.target.value))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBarGarul);","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Row, Col, Typography, Button, Divider, Tooltip, Card} from \"antd\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport NavBarGarul from '../NavBar/NavBarGarul';\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nconst {Title} = Typography;\r\n\r\n/*-- \r\n    Copyright (c) 2021, Hyun Uk Lee \r\n \r\n    This file is licenced under a Creative Commons license: \r\n    http://creativecommons.org/licenses/by/2.5/ \r\n--*/  \r\n\r\nfunction EtcPage({garul_time, language}) {\r\n    console.log(garul_time, language);\r\n    if(garul_time.name === \"비경 - 루차나 고적\") {\r\n        return (\r\n            <div>\r\n                <NavBarGarul/>\r\n                <a href=\"https://cafe.naver.com/anothereden/71984\" rel=\"noreferrer\" target=\"_blank\">\r\n                    <Button style={{margin: \"2rem\"}}>세부 공략을 보려면 여기로(네이버 카페 링크)</Button>\r\n                </a>\r\n                <div className=\"container\">\r\n                    <img alt=\"루차나 고적\" style={{width: \"100%\"}} src={`images/${garul_time.name}.jpg`} />\r\n                </div>            \r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <NavBarGarul/>\r\n                <div className=\"container\">\r\n                    <Row justify=\"center\">\r\n                        <Col xs={24} sm={16}>\r\n                            <Title level={2}>{garul_time.name}</Title>\r\n                            <br/>\r\n                            <div className=\"left-profile\">\r\n                                권장레벨 : <b className=\"green\">\r\n                                    {garul_time.hard ? garul_time.hard.level : \"X\"}\r\n                                </b>\r\n                            </div>\r\n                            <div className=\"left-profile\">\r\n                                3번째 칸 : {garul_time.reward}\r\n                            </div>\r\n                            <div className=\"left-profile\">\r\n                                <b className=\"green\">Hard</b> : {garul_time.hard ? garul_time.hard.count : \"없음\"}\r\n                            </div>\r\n                        </Col>\r\n                        <Col xs={24} sm={8}>\r\n                            <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>천명작</Divider>\r\n                            {garul_time.statusup === null ? (<Title level={2}>없음</Title>) : (garul_time.statusup.map(job => (\r\n                                    <Tooltip title={job}>\r\n                                        <img alt={job} style={{ width: \"25%\"}} src={`images/character_base/${job}.png`}/>\r\n                                    </Tooltip>\r\n                            )))}\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <div className=\"left-profile\" style={{fontSize:\"1.6rem\"}}>\r\n                                <b className=\"red\">{garul_time.first}</b> 우선, {garul_time.etc}\r\n                    </div>\r\n                    <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>Monster & Fear</Divider>\r\n                    {garul_time.name === \"미래 가를레아 대륙\" ?\r\n                        <div>\r\n                        <h4><b>미래 가를에서 인카운트 광석을 얻게 되면</b></h4>\r\n                        <h4><b>잡몹전을 거의 하지 않게 됨</b></h4>\r\n                        <h4><b>또, 반짝이를 소모해 약점 부여도 가능함</b></h4>\r\n                        <h4><b>그래서 약점표는 생략하고 링크로 대체</b></h4> \r\n                        </div> \r\n                    : null}\r\n                    <a href={garul_time.weak} target=\"_blank\" rel=\"noreferrer\"><Button>링크</Button></a>\r\n                \r\n                    \r\n                    <Row justify=\"center\" align=\"middle\">\r\n                        <Col xs={24} sm={8}>\r\n                        {garul_time.map.map(map => (\r\n                                <div className=\"left-map\">\r\n                                    <Divider style={{fontSize:\"1.4rem\"}}>{language === \"kor\" ? map.kor : map.jap}</Divider>\r\n                                    <div className=\"left-map-name\" style={{fontSize:\"1rem\", marginBottom:\"5px\"}}>\r\n                                        {map.description}\r\n                                    </div>\r\n                                    <img alt={map.kor} style={{ width: \"75%\", marginRight:\"1rem\", marginBottom: \"2rem\"}} src={`images/garul/map/${map.kor}.jpg`}/>\r\n                                    {garul_time.name !== \"미래 가를레아 대륙\" ? <img alt={map.kor} style={{ width: \"15%\"}} src={`images/garul/map/${map.kor}_s.jpg`}/> : null}\r\n                                </div>\r\n                            ))}\r\n                        </Col>\r\n                        <Col xs={24} sm={8}>\r\n                        {garul_time.boxmap.map(map => (\r\n                                <div className=\"left-map\">\r\n                                    <Divider style={{fontSize:\"1.4rem\"}}>{language === \"kor\" ? map.kor : map.jap}</Divider>\r\n                                    <div className=\"left-map-name\" style={{fontSize:\"1rem\", marginBottom:\"5px\"}}>\r\n                                        {map.description}\r\n                                    </div>\r\n                                    <img alt={map.kor} style={{ width: \"75%\", marginRight:\"1rem\", marginBottom: \"2rem\"}} src={`images/garul/map/${map.kor}.jpg`}/>\r\n                                    {garul_time.name !== \"미래 가를레아 대륙\" ? <img alt={map.kor} style={{ width: \"15%\"}} src={`images/garul/map/${map.kor}_s.jpg`}/> : null}\r\n                                </div>\r\n                            ))}\r\n                        </Col>\r\n                        <Col xs={24} sm={8}>\r\n                            <Divider orientation=\"center\" style={{fontSize:\"1.4rem\"}}>BOSS</Divider>\r\n                            {garul_time.boss.map(boss => (\r\n                                <div>\r\n                                    <Row justify=\"center\" align=\"middle\" style={{marginTop: \"20px\",marginBottom: \"20px\"}}>\r\n                                        <Col span={12}>\r\n                                            {boss.comment !== \"본체\" ? <b style={{fontSize: \"1.4rem\"}}>-{boss.comment}-</b> : \r\n                                            <img alt ={`boss${boss.id}`} style={{ width: \"80%\"}} src={`images/garul/boss/${garul_time.name}_${boss.id}.jpg`}/>\r\n                                            }   \r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row justify=\"center\" align=\"middle\" >    \r\n                                        <Col span={12} style={{lineHeight:\"100%\"}}>\r\n                                                약점 {boss.weak === null ? <b>없음</b> : \r\n                                                (boss.weak.map(type => (\r\n                                                    <Tooltip title={type}>\r\n                                                        <img alt = {type} style={{ width: \"21%\"}} src={`images/types/${type}.png`}/>\r\n                                                    </Tooltip>\r\n                                                )))}\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                                내성 {boss.strong === null ? <b>없음</b> : \r\n                                                (boss.strong.map(type => (\r\n                                                    <Tooltip title={type}>\r\n                                                        <img alt = {type} style={{ width: \"21%\"}} src={`images/types/${type}.png`}/>\r\n                                                    </Tooltip>\r\n                                                )))}\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {boss.description ?\r\n                                    <div>\r\n                                        <Row justify=\"center\" align=\"middle\" style={{marginTop: \"20px\",marginBottom: \"20px\"}}>\r\n                                            <Col span={24}>\r\n                                                {boss.description.map(desc => (\r\n                                                    <h4><b>{desc}</b></h4>\r\n                                                ))}\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Divider></Divider>\r\n                                    </div>\r\n                                    : null}\r\n                                    \r\n                                </div> ))}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row justify=\"center\">\r\n                        {garul_time.items.map(item =>(\r\n                            <Col xs={24} sm={8}>\r\n                                <Card cover={<img alt={item.id} \r\n                                style={{ width: \"20%\", margin: \"0 auto\"}} \r\n                                src={`images/garul/item/${garul_time.name}-${item.id}.jpg`}/>}>\r\n                                {item.description.map(desc => (\r\n                                    <h4><b>{desc}</b></h4>\r\n                                ))}\r\n                                </Card>\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    garul_time: state.garul_time,\r\n    language: state.language\r\n})\r\n\r\nexport default connect(mapStateToProps)(withRouter(EtcPage))\r\n","import React, { useState } from 'react'\r\nimport { Typography, Input, Card, Col, Row, Tooltip, Button } from 'antd';\r\nimport books from \"../../data/books/books.json\";\r\nimport {withRouter, Link} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { setDungeon } from '../../_actions/actions';\r\nimport Footer from \"../Footer/Footer\";\r\n\r\n/*-- \r\n    Copyright (c) 2021, Hyun Uk Lee \r\n \r\n    This file is licenced under a Creative Commons license: \r\n    http://creativecommons.org/licenses/by/2.5/ \r\n--*/  \r\n\r\nconst { Search } = Input;\r\nconst {Title} = Typography;\r\n\r\nfunction SearchPage({HandleLink}) {\r\n    \r\n    const [SearchName, setSearchName] = useState(\"\")\r\n    \r\n    const filtered = books.filter(element => (element.job.filter(job => job.includes(SearchName)).length !== 0))\r\n\r\n    const jobNotParsed = []\r\n\r\n    filtered.forEach(element => (\r\n        element.job.forEach(a => {\r\n            if(a.includes(SearchName))\r\n                jobNotParsed.push(a);\r\n        })\r\n    ))\r\n    \r\n    const jobParsed = new Set(jobNotParsed);\r\n    const jobList = [...jobParsed];\r\n\r\n    const HandleChange = (e) => {\r\n        setSearchName(e.target.value);\r\n    }\r\n    \r\n    const renderSearch = jobList.map(jobname => (\r\n        <Col xs={12} md={6} lg={4}>\r\n            <Card cover={\r\n                <Tooltip title={jobname}>\r\n                    <img alt={jobname} src={`images/character_base/${jobname}.png`}/>\r\n                </Tooltip>}\r\n                style={{width: \"95%\"}} bodyStyle={{paddingLeft: 0, paddingRight: 0}} hoverable>\r\n                \r\n                {filtered.filter(element => (element.job.filter(e => e.includes(jobname)).length !== 0)).map(a => (\r\n                    <Link to=\"/dungeon\">\r\n                        <Button onClick={HandleLink}>{a.name}</Button>\r\n                    </Link>\r\n                 ))}\r\n            </Card>\r\n        </Col>\r\n    ));\r\n\r\n    return (\r\n        <div className=\"container\" style={{paddingTop: \"3rem\"}}>\r\n            <Title level={2}>직업의 서 검색</Title>\r\n            <h3><b>사진 아래 버튼을 누르시면 해당 던전 정보로 이동합니다.</b></h3>\r\n            <br/>\r\n            직업서 정보는 노말 타입 5성 캐릭터만 제공됩니다.\r\n            <br/>\r\n            5성 직업서는 <b className=\"red\">Very Hard 난이도</b>에서만 얻을 수 있습니다.\r\n            <br/>\r\n            <Search style={{width:\"300px\", marginTop: \"4rem\", marginBottom: \"2rem\"}} \r\n            placeholder=\"캐릭터 검색\" \r\n            value={SearchName} \r\n            onChange={HandleChange}\r\n            enterButton />\r\n            <Row justify=\"center\">\r\n                {renderSearch}\r\n            </Row>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    dungeon: state.dungeon,\r\n    language: state.language\r\n  })\r\n  \r\nconst mapDispatchToProps = dispatch => ({\r\n  HandleLink: (e) => {\r\n        const info = books.find(element => element.name.includes(e.target.innerText))\r\n        window.localStorage.setItem(\"Time\",info.time);\r\n        window.localStorage.setItem(\"Dungeon\",info.dungeonname);\r\n        dispatch(setDungeon(`${info.time}_${info.dungeonname}`));\r\n  }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SearchPage))\r\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport DungeonPage from \"./views/DungeonPage/DungeonPage\";\nimport MainPage from \"./views/MainPage/Mainpage\";\nimport EtcPage from \"./views/EtcPage/EtcPage\";\nimport SearchPage from \"./views/SearchPage/SearchPage\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Route exact path=\"/\" component={MainPage}/>\n      <Route exact path=\"/dungeon\" component={DungeonPage}/>\n      <Route exact path=\"/etc\" component={EtcPage}/>\n      <Route exact path=\"/search\" component={SearchPage}/>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from \"../_actions/types\";\r\n\r\nimport ancient_zer_jung from \"../data/ancient_zer_jung.json\";\r\nimport ancient_zer_thund from \"../data/ancient_zer_thund.json\";\r\nimport ancient_nadara from \"../data/ancient_nadara.json\";\r\nimport ancient_swamp from \"../data/ancient_swamp.json\";\r\nimport ancient_time from \"../data/ancient_time.json\";\r\nimport ancient_star from \"../data/ancient_star.json\";\r\nimport ancient_dragon from \"../data/ancient_dragon.json\";\r\nimport ancient_tales from \"../data/ancient_tales.json\";\r\nimport future_mayu from \"../data/future_mayu.json\";\r\nimport future_saki from \"../data/future_saki.json\";\r\nimport future_zeno from \"../data/future_zeno.json\";\r\nimport future_ship from \"../data/future_ship.json\";\r\nimport future_toto from \"../data/future_toto.json\";\r\nimport future_garden from \"../data/future_garden.json\";\r\nimport future_kms from \"../data/future_kms.json\";\r\nimport future_corridor from \"../data/future_corridor.json\";\r\nimport future_industry from \"../data/future_industry.json\";\r\nimport present_dogma from \"../data/present_dogma.json\"\r\nimport present_moon from \"../data/present_moon.json\"\r\nimport present_damak from \"../data/present_damak.json\"\r\nimport present_miglance from \"../data/present_miglance.json\"\r\nimport present_beast_castle from \"../data/present_beast_castle.json\";\r\nimport present_fire_beast from \"../data/present_fire_beast.json\";\r\nimport present_weird from \"../data/present_weird.json\";\r\nimport present_labyrinth from \"../data/present_labyrinth.json\";\r\nimport present_mementos from \"../data/present_mementos.json\";\r\nimport etc_exp from \"../data/etc_exp.json\";\r\nimport etc_git from \"../data/etc_git.json\";\r\n\r\nimport present from \"../data/garulea/present.json\"\r\nimport ancient from \"../data/garulea/ancient.json\"\r\nimport future from \"../data/garulea/future.json\"\r\n\r\n/*-- \r\n    Copyright (c) 2021, Hyun Uk Lee \r\n \r\n    This file is licenced under a Creative Commons license: \r\n    http://creativecommons.org/licenses/by/2.5/ \r\n--*/  \r\n\r\nconst garuls = {\r\n    present: present,\r\n    ancient: ancient,\r\n    future: future,\r\n    gold: {\r\n        name: \"비경 - 루차나 고적\"\r\n    }\r\n}\r\n\r\nconst dungeons = {\r\n    present_beast_castle: present_beast_castle,\r\n    ancient_zer_jung: ancient_zer_jung,\r\n    ancient_zer_thund: ancient_zer_thund,\r\n    future_mayu: future_mayu,\r\n    present_dogma: present_dogma,\r\n    present_moon: present_moon,\r\n    future_industry: future_industry,\r\n    ancient_nadara: ancient_nadara,\r\n    ancient_swamp: ancient_swamp,\r\n    present_miglance: present_miglance,\r\n    future_zeno: future_zeno,\r\n    future_ship: future_ship,\r\n    ancient_time: ancient_time,\r\n    future_corridor: future_corridor,\r\n    ancient_star: ancient_star,\r\n    present_damak: present_damak,\r\n    future_toto: future_toto,\r\n    present_fire_beast: present_fire_beast,\r\n    present_weird: present_weird,\r\n    future_kms: future_kms,\r\n    present_labyrinth: present_labyrinth,\r\n    future_saki: future_saki,\r\n    ancient_dragon: ancient_dragon,\r\n    etc_exp: etc_exp,\r\n    etc_git: etc_git,\r\n    future_garden: future_garden,\r\n    present_mementos: present_mementos,\r\n    ancient_tales: ancient_tales\r\n}\r\n\r\nconst initialState = {\r\n    dungeon: window.localStorage.getItem(\"Time\") \r\n    ? dungeons[`${window.localStorage.getItem(\"Time\")}_${window.localStorage.getItem(\"Dungeon\")}`]\r\n     : dungeons.ancient_nadara,\r\n    language: \"kor\",\r\n    garul_time: window.localStorage.getItem(\"Garul_Time\") \r\n    ? garuls[window.localStorage.getItem(\"Garul_Time\")]\r\n     : garuls.present\r\n}\r\n\r\nconst counter = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case types.SET_DUNGEON:\r\n            return {\r\n                ...state,\r\n                dungeon: dungeons[action.dungeon]\r\n            }\r\n        case types.SET_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                language: action.language\r\n            }\r\n        case types.SET_GARUL:\r\n            return {\r\n                ...state,\r\n                garul_time: garuls[action.garul_time]\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\nimport {createStore} from 'redux';\nimport reducers from './_reducers/dungeon_reducer';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}